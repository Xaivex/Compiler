int global_var;
int x_value;
bool flag_value;

struct Set {
    int x;
    int y;
    int z;
};

struct Tree {
    int set1;
    int set2;
};

int bar(int x_value, bool flag_value) {
}

int calculate(int num, bool flag) { }
void process() {
    int num1;
    bool flag1;
    struct Set p;
    p.x = num1;
    flag1 = num1 == 3;
    calculate(num1 + p.y*2, flag1);
    process();
}

struct Item {
    int number;
};

struct SubItem {
    struct Item mainItem;
};

struct Container {
    struct SubItem subItem;
};

int assignValue()
{
    struct Container box;
    box.subItem.mainItem.number = 400;
}

void forest() {
    int tree_height;
    int tree_width;
    struct Tree burrow1;
    burrow1.set1 = tree_height;
    burrow1.set2 = tree_width;
    tree_width = 2;
    tree_height = 3;
    bar(tree_width + burrow1.set2*2, tree_width);
}

struct S1 {
   struct Tree burrow2;
};

int Location(int input_num) {
    struct S1 s;
    int x_local;
    int y_local;
    int z_local;
    s.burrow2.set1 = input_num;
    s.burrow2.set1 = 500;
    z_local=(s.burrow2.set2*2);
    
    if (flag_value == false) { 
        x_local = 4+y_local; 
        while (x_local<100) { 
            x_local = y_local*2; 
        } 
    } else {
    	x_local = 2;
        y_local = 1;
        z_local = z_local;
    }

    return 500; 
}

struct Point {
    int x;
    int y;
};
int f(int x, bool b) { }
void g() {
    int a;
    bool b;
    struct Point p;
    p.x = a;
    b = a == 3;
    f(a + p.y*2, b);
    g();
}

